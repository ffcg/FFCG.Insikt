@{
    Layout = null;
}

<!DOCTYPE html>

<html>
    <head>
        <meta name="viewport" content="width=device-width" />
        <title></title>
        <link href="./Styles/battleshipp.css" type="text/css" rel="stylesheet"/>
    </head>
    <body>
        <div>
            <input type="button" value="Join game!" id="joingamebutton" />
            <h1 id="status"></h1>
            <h2 id="turnStatus"></h2>
        
            @{
                for (var i = 0; i < 10; i++)
                {
                    <div class="row">
                        @{
                            for (var j = 0; j < 10; j++)
                            {
                                <div class="column" data-x="@i" data-y="@j"></div>
                            }
                        }
                    </div>
                }
            }
        </div>
        <!--Script references. -->
        <!--Reference the jQuery library. -->
        <script src="../Scripts/jquery-1.6.4.min.js"></script>
        <!--Reference the SignalR library. -->
        <script src="../Scripts/jquery.signalR-2.2.0.min.js"></script>
        <!--Reference the autogenerated SignalR hub script. -->
        <script src="../signalr/hubs"></script>
        <script type="text/javascript">

            var globalPlayerId;
            var placedShips = [];
            var playerHasPlacedAllShips = false;
            var isActive = false;

            $(function() {
                // Declare a proxy to reference the hub.
                var hub = $.connection.battleshipHub;
                $.connection.hub.start();

                // Create a function that the hub can call to broadcast messages.
                hub.client.gameIsWaitingForSecondPlayer = function(gameId) {
                    $('#status').text("Waiting for another player");
                };

                hub.client.gameHasBeenStarted = function(gameId) {
                    $('#status').text("Opponent connected");
                };

                hub.client.allShipsHaveBeenPlaced = function (gameId, activePlayerId) {
                    $('#status').text("GameOn!!");
                };

                hub.client.newActivePlayer = function (activePlayerId) {
                    isActive = globalPlayerId == activePlayerId;
                    if (globalPlayerId == activePlayerId) {
                        $('#turnStatus').text("Fire at will!");
                        isActive = true;
                    }
                    else {
                        $('#turnStatus').text("Duck and cover!");
                        isActive = false;
                    }
                };

                hub.client.shipHasBeenPlaced = function (gameId, playerId, x, y) {
                    if (globalPlayerId != playerId)
                        return;

                    placedShips.push({ row: x, cell: y });

                    if (placedShips.length == 5) {
                        playerHasPlacedAllShips  = true;
                    }

                    var cell = $("div[data-x=" + x + "][data-y=" + y + "]");
                    cell.addClass("ship");
                };

                hub.client.allShipsHaveBeenPlaced = function (gameId, activePlayerId) {
                    if (globalPlayerId == activePlayerId) {
                        $('#turnStatus').text("Fire at will!");
                        isActive = true;
                    }
                    else {
                        $('#turnStatus').text("Duck and cover!");
                    }
                };

                hub.client.playerSunkShip = function (playerId, enemyId, x, y) {
                    if (globalPlayerId == playerId) {
                        $('#status').text("You hit the enemy!");
                        $("div[data-x=" + x + "][data-y=" + y + "]").addClass("my-shot-hit");
                    }
                    else {
                        $("div[data-x=" + x + "][data-y=" + y + "]").addClass("sunken-ship");
                        $('#status').text("Your ship was lost!");
                    }
                };

                hub.client.playerMissed = function (playerId, enemyId, x, y) {
                    if (globalPlayerId == playerId) {
                        $('#status').text("You missed!");
                        $("div[data-x=" + x + "][data-y=" + y + "]").addClass("my-shot-miss");
                    }
                    else {
                        $("div[data-x=" + x + "][data-y=" + y + "]").addClass("opponent-miss");
                        $('#status').text("Your ships are safe!");
                    }
                };

                hub.client.gameOver = function (winnerPlayerId) {

                };
            });

            $("#joingamebutton").click(function() {
                $.ajax("game/join/player", {
                        type: "post",
                        contentType: "text/plain"
                    })
                    .done(function (playerId) {
                        globalPlayerId = playerId;
                    });
            });

            $(".column").click(function() {
                var cell = $(this);

                if (playerHasPlacedAllShips) {
                    if (!isActive)
                        return;
                    
                    //if active player, fire shot at cell
                    $.ajax("game/fire", {
                        type: "post",
                        data: JSON.stringify(
                        {
                            PlayerId: globalPlayerId,
                            X: cell.attr('data-x'),
                            Y: cell.attr('data-y')
                        }),
                        contentType: "application/json"
                    });

                } else {
                    //  place ship
                    $.ajax("game/placeship", {
                        type: "post",
                        data: JSON.stringify(
                        {
                            PlayerId: globalPlayerId,
                            X: cell.attr('data-x'),
                            Y: cell.attr('data-y')
                        }),
                        contentType: "application/json"
                    });
                }
            });
        </script>
    </body>
</html>